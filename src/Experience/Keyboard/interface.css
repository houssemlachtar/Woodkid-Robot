.keyboard-interface {
  --keySize: 30px;
  --keyMargin: 10px;
  --keyFullSize: calc(var(--keySize) + var(--keyMargin));
  --lineSize: calc(15 * var(--keyFullSize) - var(--keyMargin));
  position: fixed;
  bottom: 60px;
  left: 60px;
}
html.debug-hidden .keyboard-interface {
  display: none;
}
.keyboard-interface .line:last-child {
  position: absolute;
  left: calc(100% + var(--keyMargin));
  bottom: 0;
  width: 100%;
}
.keyboard-interface .key {
  display: inline-block;
  position: relative;
  width: var(--keySize);
  height: var(--keySize);
  margin-right: var(--keyMargin);
  margin-bottom: var(--keyMargin);
}
.keyboard-interface .key::before,
.keyboard-interface .key::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 5px;
  border: 2px solid #fff;
}
.keyboard-interface .key::before {
  display: none;
  background: #fff;
  opacity: 0.4;
  transition-property: opacity;
  transition-duration: 0.3s;
  will-change: opacity;
}
.keyboard-interface .key.highlight::before {
  display: block;
}
.keyboard-interface .key.highlight.pressed::before {
  opacity: 1;
  transition-duration: 0s;
}
.keyboard-interface .key.Backspace,
.keyboard-interface .key.Tab,
.keyboard-interface .key.Caps,
.keyboard-interface .key.ShiftLeft,
.keyboard-interface .key.ShiftRight {
  width: calc(var(--keySize) * 2 + var(--keyMargin));
}
.keyboard-interface .key.Special {
  width: calc((var(--lineSize) - 210px) / 7 - var(--keyMargin));
}
.keyboard-interface .key.Enter::after {
  height: calc(var(--keySize) * 2 + var(--keyMargin) * 1.5);
}
.keyboard-interface .key.Space {
  width: 210px;
}
.keyboard-interface .key.ArrowUp {
  position: absolute;
  left: var(--keyFullSize);
  top: calc(var(--keyFullSize) * -1);
}
